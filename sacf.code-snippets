{
	"New SACF Field": {
		"prefix": "sacf",
		"scope": "php",
		"body": [
			"(new \\sacf\\field\\\\${1|group,repeater,text,textarea,wysiwyg,image,radio,select,truefalse,datepicker,datetimepicker,timepicker,link,url,file,message,number,postobject,taxonomy,relationship|}('$2', ${3:\\$this->slug . }'$4'))$0;"
		]
	},
	/**
	 * sacf\field\base
	 */
	"->instructions($string = '')": {
		"prefix": "instructions (sacf)",
		"scope": "php",
		"body": [
			"->instructions('$1')$0"
		]
	},
	"->required($bool = true)": {
		"prefix": "required (sacf)",
		"scope": "php",
		"body": [
			"->required(true)"
		]
	},
	"->wrapper($int = '', $class = '', $id = '')": {
		"prefix": "wrapper (sacf)",
		"scope": "php",
		"body": [
			"->wrapper(${1:int \\$width}${2:, '${3:\\$class}'}${4:, '${5:\\$id}'})$0"
		]
	},
	"->class($string = '')": {
		"prefix": "class (sacf)",
		"scope": "php",
		"body": [
			"->class('$1')$0"
		]
	},
	"->id($string = '')": {
		"prefix": "id (sacf)",
		"scope": "php",
		"body": [
			"->id('$1')$0"
		]
	},
	"->width($int = '')": {
		"prefix": "width (sacf)",
		"scope": "php",
		"body": [
			"->width(${1:int \\$width})$0"
		]
	},
	"->if($field: \\sacf\\field\\base = '', $operator: '=='|'!='|'>'|'<'|'>='|'<=' = '==', $value: bool|string = '1')": {
		"prefix": "if (sacf)",
		"scope": "php",
		"body": [
			"->if(${1:\\sacf\\field \\$field}${2:, '${3|==,!=,>,>=,<,<=|}'}${4:, '${5:1}'})$0"
		]
	},
	"->and($field: \\sacf\\field\\base = '', $operator='==', $value='1')": {
		"prefix": "and (sacf)",
		"scope": "php",
		"body": [
			"->and(${1:\\sacf\\field \\$field}${2:, '${3|==,!=,>,>=,<,<=|}'}${4:, '${5:1}'})$0"
		]
	},
	"->or($field: \\sacf\\field\\base = '', $operator='==', $value='1')": {
		"prefix": "or (sacf)",
		"scope": "php",
		"body": [
			"->or(${1:\\sacf\\field \\$field}${2:, '${3|==,!=,>,>=,<,<=|}'}${4:, '${5:1}'})$0"
		]
	},
	/**
	 * sacf\field\group & repeater
	 */
	"->add(($field: \\sacf\\field\\base = '')[->width($int = '')])": {
		"prefix": "add (sacf/group|repeater)",
		"scope": "php",
		"body": [
			"->add(${1: \\sacf\\field\\base \\$field}${2:->width(${3:int \\$width})})$0"
		]
	},
	"->layout($string: 'row'|'table'|'block' = 'row')": {
		"prefix": "layout (sacf/group|repeater)",
		"scope": "php",
		"body": [
			"->layout('${1|row,table,block|}')$0"
		]
	},
	/**
	 * sacf\field\repeater, number, relationship
	 */
	"->min($int = '')": {
		"prefix": "min (sacf/repeater|number|relationship)",
		"scope": "php",
		"body": [
			"->min(${1:int \\$min})$0"
		]
	},
	"->max($int = '')": {
		"prefix": "max (sacf/repeater|number|relationship)",
		"scope": "php",
		"body": [
			"->max(${1:int \\$max})$0"
		]
	},
	/**
	 * sacf\field\repeater
	 */
	"->button_label($string = '')": {
		"prefix": "button_label (sacf/repeater)",
		"scope": "php",
		"body": [
			"->button_label('$1')$0"
		]
	},
	/**
	 * sacf\field\text, textarea, wysiwyg, radio, select, url
	 */
	"->default_value($string = '')": {
		"prefix": "default_value (sacf/text|textarea|wysiwyg|radio|select|url)",
		"scope": "php",
		"body": [
			"->default_value('$1')$0"
		]
	},
	/**
	 * sacf\field\text, textarea, select, url, number
	 */
	"->placeholder($string = '')": {
		"prefix": "placeholder (sacf/text|textarea|select|url|number)",
		"scope": "php",
		"body": [
			"->placeholder('$1')$0"
		]
	},
	/**
	 * sacf\field\text, textarea, select
	 */
	"->readonly($bool = false)": {
		"prefix": "readonly (sacf/text|textarea|select)",
		"scope": "php",
		"body": [
			"->readonly(${1|true,false|})$0"
		]
	},
	"->disabled($bool = false)": {
		"prefix": "disabled (sacf/text|textarea|select)",
		"scope": "php",
		"body": [
			"->disabled(${1|true,false|})$0"
		]
	},
	/**
	 * sacf\field\text & textarea
	 */
	"->maxlength($int = '')": {
		"prefix": "maxlength (sacf/text|textarea)",
		"scope": "php",
		"body": [
			"->maxlength(${1:int \\$maxlength})$0"
		]
	},
	/**
	 * sacf\field\text, textarea, number
	 */
	"->prepend($string = '')": {
		"prefix": "prepend (sacf/text|textarea|number)",
		"scope": "php",
		"body": [
			"->prepend('$1')$0"
		]
	},
	"->append($string = '')": {
		"prefix": "append (sacf/text|textarea|number)",
		"scope": "php",
		"body": [
			"->append('$1')$0"
		]
	},
	/**
	 * sacf\field\textarea
	 */
	"->rows($int = '')": {
		"prefix": "rows (sacf/textarea)",
		"scope": "php",
		"body": [
			"->rows(${1:int \\$rows})$0"
		]
	},
	/**
	 * sacf\field\textarea & message
	 */
	"->new_lines($string: ''|'wpautop'|'br' = '')": {
		"prefix": "new_lines (sacf/textarea|message)",
		"scope": "php",
		"body": [
			"->new_lines('${1|wpautop,br|}')$0"
		]
	},
	/**
	 * sacf\field\wysiwyg
	 */
	"->tabs($string: 'all'|'visual'|'text' = 'all')": {
		"prefix": "tabs (sacf/wysiwyg)",
		"scope": "php",
		"body": [
			"->tabs('${1|all,visual,text|}')$0"
		]
	},
	"->toolbar($string: 'full'|'basic'|(.+) = 'full')": {
		"prefix": "toolbar (sacf/wysiwyg)",
		"scope": "php",
		"body": [
			"->toolbar('${1|full,basic,(.+)|}')$0"
		]
	},
	"->media_upload($bool = true)": {
		"prefix": "media_upload (sacf/wysiwyg)",
		"scope": "php",
		"body": [
			"->media_upload(${1|false,true|})$0"
		]
	},
	/**
	 * sacf\field\image & file
	 */
	"->return_format($string: 'array'|'url'|'id' = 'array')": {
		"prefix": "return_format (sacf/image|file)",
		"scope": "php",
		"body": [
			"->return_format('${1|array,url,id|}')$0"
		]
	},
	"->max_size($int = '')": {
		"prefix": "max_size (sacf/image|file)",
		"scope": "php",
		"body": [
			"->max_size(${1:int \\$max_mb})$0"
		]
	},
	/**
	 * sacf\field\image
	 */
	"->preview_size($string: 'thumbnail'|'medium'|'large'|'full'|'(.+)' = 'thumbnail')": {
		"prefix": "preview_size (sacf/image)",
		"scope": "php",
		"body": [
			"->preview_size('${1|thumbnail,medium,large,full,(.+)|}')$0"
		]
	},
	"->min_width($int = '')": {
		"prefix": "min_width (sacf/image)",
		"scope": "php",
		"body": [
			"->min_width(${1:int \\$min_width})$0"
		]
	},
	"->max_width($int = '')": {
		"prefix": "max_width (sacf/image)",
		"scope": "php",
		"body": [
			"->max_width(${1:int \\$max_width})$0"
		]
	},
	"->min_height($int = '')": {
		"prefix": "min_height (sacf/image)",
		"scope": "php",
		"body": [
			"->min_height(${1:int \\$min_height})$0"
		]
	},
	"->max_height($int = '')": {
		"prefix": "max_height (sacf/image)",
		"scope": "php",
		"body": [
			"->max_height(${1:int \\$max_height})$0"
		]
	},
	"->mime_types($string = '') image": {
		"prefix": "mime_types (sacf/image)",
		"scope": "php",
		"body": [
			"->mime_types('${1:jpg}${2:,${3:png}}${4:,${5:webp}}')$0"
		]
	},
	/**
	 * sacf\field\radio & select
	 */
	"->choices($array = [])": {
		"prefix": "choices (sacf/radio|select)",
		"scope": "php",
		"body": [
			"->choices([",
			"\t'$1' => '$2',$3",
			"])$0"
		]
	},
	/**
	 * sacf\field\radio
	 */
	"->layout($string: 'vertical'|'horizontal' = 'vertical')": {
		"prefix": "layout (sacf/radio)",
		"scope": "php",
		"body": [
			"->layout('${1|horizontal,vertical|}')$0"
		]
	},
	/**
	 * sacf\field\select & truefalse
	 */
	"->ui($bool = false)": {
		"prefix": "ui (sacf/select|truefalse)",
		"scope": "php",
		"body": [
			"->ui(${1|true,false|})$0"
		]
	},
	/**
	 * sacf\field\select, postobject, taxonomy
	 */
	"->allow_null($bool = false)": {
		"prefix": "allow_null (sacf/select|postobject|taxonomy)",
		"scope": "php",
		"body": [
			"->allow_null(${1|true,false|})$0"
		]
	},
	"->multiple($bool = false)": {
		"prefix": "multiple (sacf/select|postobject|taxonomy)",
		"scope": "php",
		"body": [
			"->multiple(${1|true,false|})$0"
		]
	},
	/**
	 * sacf\field\select
	 */
	"->ajax($bool = false)": {
		"prefix": "ajax (sacf/select)",
		"scope": "php",
		"body": [
			"->ajax(${1|true,false|})$0"
		]
	},
	/**
	 * sacf\field\truefalse & message
	 */
	"->message($string = '')": {
		"prefix": "message (sacf/truefalse|message)",
		"scope": "php",
		"body": [
			"->message('$1')$0"
		]
	},
	/**
	 * sacf\field\truefalse
	 */
	"->default_value($bool = false)": {
		"prefix": "default_value (sacf/truefalse)",
		"scope": "php",
		"body": [
			"->default_value(${1|true,false|})$0"
		]
	},
	"->ui_on_text($string = '')": {
		"prefix": "ui_on_text (sacf/truefalse)",
		"scope": "php",
		"body": [
			"->ui_on_text('${1:ja}')$0"
		]
	},
	"->ui_off_text($string = '')": {
		"prefix": "ui_off_text (sacf/truefalse)",
		"scope": "php",
		"body": [
			"->ui_off_text('${1:nein}')$0"
		]
	},
	/**
	 * sacf\field\datepicker & datetimepicker
	 */
	"first_day($int = 1)": {
		"prefix": "first_day (sacf/date|datetime)",
		"scope": "php",
		"body": [
			"->first_day(${1:int \\$first_day})$0"
		]
	},
	/**
	 * sacf\field\datepicker
	 */
	"->display_format($string = 'd/m/Y')": {
		"prefix": "display_format (sacf/date)",
		"scope": "php",
		"body": [
			"->display_format('${1:d.m.Y}')$0"
		]
	},
	"->return_format($string = 'F j, Y')": {
		"prefix": "return_format (sacf/date)",
		"scope": "php",
		"body": [
			"->return_format('${1:Y-m-d}')${2: // to get ordered chronological, use with Datetime::createFromFormat('Y-m-d', \\$date)}$0"
		]
	},
	/**
	 * sacf\field\timepicker
	 */
	"->display_format($string = 'g:i a')": {
		"prefix": "display_format (sacf/time)",
		"scope": "php",
		"body": [
			"->display_format('${1:H:i}')$0"
		]
	},
	"->return_format($string = 'g:i a')": {
		"prefix": "return_format (sacf/time)",
		"scope": "php",
		"body": [
			"->return_format('${1:H:i}')$0"
		]
	},
	/**
	 * sacf\field\datetimepicker
	 */
	"->display_format($string = 'd/m/Y g:i a')": {
		"prefix": "display_format (sacf/datetime)",
		"scope": "php",
		"body": [
			"->display_format('${1:d.m.Y H:i}')$0"
		]
	},
	"->return_format($string = 'F j, Y g:i a')": {
		"prefix": "return_format (sacf/datetime)",
		"scope": "php",
		"body": [
			"->return_format('${1:Y-m-d_H:i}')${2: // to get ordered chronological, use with Datetime::createFromFormat('Y-m-d_H:i', \\$date)}$0"
		]
	},
	/**
	 * sacf\field\link
	 */
	"->return_format($string: 'array'|'url' = 'array')": {
		"prefix": "return_format (sacf/link)",
		"scope": "php",
		"body": [
			"->return_format('${1|url,array|}')$0"
		]
	},
	/**
	 * sacf\field\file
	 */
	"->min_size($int = '')": {
		"prefix": "min_size (sacf/file)",
		"scope": "php",
		"body": [
			"->min_size(${1:int \\$min_mb})$0"
		]
	},
	"->mime_types($string = '') file": {
		"prefix": "mime_types (sacf/file)",
		"scope": "php",
		"body": [
			"->mime_types('${1:pdf}${2:,${3:doc}}${4:,${5:docx}}')$0"
		]
	},
	/**
	 * sacf\field\message
	 */
	"esc_html($bool = false)": {
		"prefix": "esc_html (sacf/message)",
		"scope": "php",
		"body": [
			"->esc_html(${1|true,false|})$0"
		]
	},
	/**
	 * sacf\field\number
	 */
	"->step($int = '')": {
		"prefix": "step (sacf/number)",
		"scope": "php",
		"body": [
			"->step(${1:int \\$step})$0"
		]
	},
	"->default_value($int = '')": {
		"prefix": "default_value (sacf/number)",
		"scope": "php",
		"body": [
			"->default_value(${1:int \\$value})$0"
		]
	},
	/**
	 * sacf\field\postobject & relationship
	 */
	"->post_type($postTypes: string[] = [])": {
		"prefix": "post_type (sacf/postobject|relationship)",
		"scope": "php",
		"body": [
			"->post_type(['${1|post,page,(.+)|}'${2:, '${3|post,page,(.+)|}'}])$0"
		]
	},
	"->taxonomy($taxonomies: 'taxonomy:term'[] = [])": {
		"prefix": "taxonomy (sacf/postobject|relationship)",
		"scope": "php",
		"body": [
			"->taxonomy([",
			"\t'${1:taxonomy}:${2:term}',${3}",
			"])$0"
		]
	},
	/**
	 * sacf\field\postobject
	 */
	"->return_format($string: 'array'|'object'|'id' = 'object')": {
		"prefix": "return_format (sacf/postobject)",
		"scope": "php",
		"body": [
			"->return_format('${1|array,id,object|}')$0"
		]
	},
	/**
	 * sacf\field\taxonomy & relationship
	 */
	"->return_format($string: 'object'|'id' = 'object')": {
		"prefix": "return_format (sacf/taxonomy)",
		"scope": "php",
		"body": [
			"->return_format('${1|id,object|}')$0"
		]
	},
	/**
	 * sacf\field\taxonomy
	 */
	"->taxonomy($string = 'category)": {
		"prefix": "taxonomy (sacf/taxonomy)",
		"scope": "php",
		"body": [
			"->taxonomy('${1|category,post_tag,post_format,(.+)|}')$0"
		]
	},
	"->field_type($string: 'checkbox'|'multi_select'|'radio'|'select = 'checkbox')": {
		"prefix": "field_type (sacf/taxonomy)",
		"scope": "php",
		"body": [
			"->field_type('${1|multi_select,select,radio,checkbox|}')$0"
		]
	},
	"->add_term($bool = false)": {
		"prefix": "add_term (sacf/taxonomy)",
		"scope": "php",
		"body": [
			"->add_term(${1|true,false|})$0"
		]
	},
	"->save_terms($bool = false)": {
		"prefix": "save_terms (sacf/taxonomy)",
		"scope": "php",
		"body": [
			"->save_terms(${1|true,false|})$0"
		]
	},
	"->load_terms($bool = false)": {
		"prefix": "load_terms (sacf/taxonomy)",
		"scope": "php",
		"body": [
			"->load_terms(${1|true,false|})$0"
		]
	},
	/**
	 * sacf\field\relationship
	 */
	"->filters($filters: 'search'|'post_type'|'taxonomy'[] = ['search','post_type','taxonomy'])": {
		"prefix": "filters (sacf/relationship)",
		"scope": "php",
		"body": [
			"->filters(['${1:search}'${2:, '${3:post_type}'}${4:, '${5:taxonomy}'}])$0"
		]
	},
	"show_image($bool = false)": {
		"prefix": "show_image (sacf/relationship)",
		"scope": "php",
		"body": [
			"->elements(['featured_image'])",
			"->show_image(true)$0"
		]
	},
}
// todo: colorpicker, gallery, imageFocusGroup, tab, accordion, checkbox, buttongroup, range, email, flexcontentlayout[, ...plugin_fields?]